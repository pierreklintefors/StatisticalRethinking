xbar <- mean(d2$weight)
for ( i in 1:N ) curve( a[i] + b[i]*(x - xbar)
from=min(d2$weight) , to=max(d2$weight) , add=TRUE ,
col=col.alpha(“black”,0.2) )
for ( i in 1:N ) curve( a[i] + b[i]*(x - xbar)
from=min(d2$weight) , to=max(d2$weight) , add=TRUE ,
col=col.alpha("black",0.2) )
for ( i in 1:N ) curve( a[i] + b[i]*(x - xbar),
from=min(d2$weight) , to=max(d2$weight) , add=TRUE ,
col=col.alpha("black",0.2) )
#R code 4.40
b <- rlnorm( 1e4 , 0 ,1)
dens( b , xlim=c(0,5) , adj=0.1 )
#R code 4.41
set.seed(2971)
N <- 100
a <- rnorm( N , 178 , 20 )
b <- rlnorm( N , 0 , 1 )
#R code 4.39
plot( NULL , xlim=range(d2$weight) , ylim=c(-100,400),
xlab="weight" , ylab="height" )
abline( h=0 , lty=2 )
abline( h=272 , lty=1 , lwd=0.5 )
mtext( "b ~ dnorm(0,10)" )
xbar <- mean(d2$weight)
for ( i in 1:N ) curve( a[i] + b[i]*(x - xbar),
from=min(d2$weight) , to=max(d2$weight) , add=TRUE ,
col=col.alpha("black",0.2) )
#R code 4.42
# load data again, since it's a long way back
library(rethinking)
data(Howell1); d <- Howell1; d2 <- d[ d$age >= 18 , ]
# define the average weight, x-bar
xbar <- mean(d2$weight)
# fit model
m4.3 <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + b*( weight - xbar ) ,
a ~ dnorm( 178 , 20 ) ,
b ~ dlnorm( 0 , 1 ) ,
sigma ~ dunif( 0 , 50 )
) , data=d2 )
precis(m4.3)
m4.3b <- quap(
height ~ dnorm( mu , sigma ) ,
a ~ dnorm( 178 , 20 ) ,
sigma ~ dunif( 0 , 50 )) , data=d2
m4.3b <- quap(
alist(
height ~ dnorm( mu , sigma ) ,
mu <- a + exp(log_b)*( weight - xbar ),
a ~ dnorm( 178 , 20 ) ,
log_b ~ dnorm( 0 , 1),
sigma ~ dunif( 0 , 50 )) , data=d2 )
precis(m4.3b)
precis(m4.3)
precis(m4.3b)
#R code 4.45
round( vcov(´ m4.3 ) , 3 )
#R code 4.45
round( vcov(m4.3 ) , 3 )
pairs(m4.3)
library(rethinking)
data(cherry_blossoms)
d <- cherry_blossoms
precis(d)
plot(doy ~year, d)
##Knots are pivot points for the basis functions
d2 <- d[ complete.cases(d$doy) , ] # complete cases on doy
num_knots <- 30
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
knot_list
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Displaying basis functions
plot( NULL , xlim=range(d2$year) , ylim=c(0,1) , xlab="year" , ylab="basis" )
for ( i in 1:ncol(B) ) lines( d2$year , B[,i] )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Displaying basis functions
plot( NULL , xlim=range(d2$year) , ylim=c(0,1) , xlab="year" , ylab="basis" )
for ( i in 1:ncol(B) ) lines( d2$year , B[,i] )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,10),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
#Plot the weighted basis functions
post <- extract.samples( m4.7 )
w <- apply( post$w , 2 , mean )
plot( NULL , xlim=range(d2$year) , ylim=c(-6,6) ,
xlab="year" , ylab="basis * weight" )
for ( i in 1:ncol(B) ) lines( d2$year , w[i]*B[,i] )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,10),
sigma ~ dexp(5) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
#Plot the weighted basis functions
post <- extract.samples( m4.7 )
w <- apply( post$w , 2 , mean )
plot( NULL , xlim=range(d2$year) , ylim=c(-6,6) ,
xlab="year" , ylab="basis * weight" )
for ( i in 1:ncol(B) ) lines( d2$year , w[i]*B[,i] )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(5) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
#Plot the weighted basis functions
post <- extract.samples( m4.7 )
w <- apply( post$w , 2 , mean )
plot( NULL , xlim=range(d2$year) , ylim=c(-6,6) ,
xlab="year" , ylab="basis * weight" )
for ( i in 1:ncol(B) ) lines( d2$year , w[i]*B[,i] )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(10) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(0.1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
num_knots <- 100
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
knot_list
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Displaying basis functions
plot( NULL , xlim=range(d2$year) , ylim=c(0,1) , xlab="year" , ylab="basis" )
for ( i in 1:ncol(B) ) lines( d2$year , B[,i] )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(0.1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
num_knots <- 10
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(50) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
num_knots <- 50
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(50) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
num_knots <- 20
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(50) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(5) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(100) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(0.5) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,50),
sigma ~ dexp(0.1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
??dexp
??dexp()
?dexp()
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16)
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd ))
weight_sd = 100
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
library(rethinking)
data(cherry_blossoms)
d <- cherry_blossoms
precis(d)
plot(doy ~year, d)
##Knots are pivot points for the basis functions
d2 <- d[ complete.cases(d$doy) , ] # complete cases on doy
num_knots <- 20
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
weight_sd = 50
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
weight_sd = 100
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
weight_sd = 1000
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
num_knots <- 30
knot_list <- quantile( d2$year , probs=seq(0,1,length.out=num_knots) )
#Decide the polynomial degree, how many basis function to be combined
library(splines)
B <- bs(d2$year,
knots=knot_list[-c(1,num_knots)] ,
degree=3 , intercept=TRUE )
weight_sd = 1000
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
weight_sd = 10
# Creating a quadratic approximative model with
m4.7 <- quap(
alist(
D ~ dnorm( mu , sigma ) ,
mu <- a + B %*% w , # Multiplying each element in w with corresponding row i B
a ~ dnorm(100,10),
w ~ dnorm(0,100),
sigma ~ dexp(1) #Exponential distribution for prior
), data=list( D=d2$doy , B=B ) ,
start=list( w=rep( 0 , ncol(B) ) ) )
mu <- link( m4.7 )
mu_PI <- apply(mu,2,PI,0.97)
plot( d2$year , d2$doy , col=col.alpha(rangi2,0.3) , pch=16, main = paste("Weight_sd prior:", weight_sd, "Knots:", num_knots ))
shade( mu_PI , d2$year , col=col.alpha("black",0.5) )
library(rethinking)
d <- data("Howell1")
d <- data("Howell1")
data("Howell1")
View(Howell1)
d = Howell1[Howell1$age>=18]
d = Howell1[,Howell1$age>=18]
d = Howell1[,age>=18]
d = Howell1[,"age">=18]
View(d)
d = Howell1[age>=18]
d = Howell1[,age>=18]
d = Howell1[Howell1$age>=18]
d = Howell1[Howell1$age>18]
Howell1[Howell1$age>=18]
d = Howell1[Howell1$age>=18, ]
View(d)
height_mean = mean(d$height)
model <- quap(
alist(
weight ~dnorm(mu, sigma),
mu <- a + b*(height-height_mean),
a ~ dnorm(50, 80),
b ~ dlnorm(0, 1),
sigma ~ dunif(0, 30)
), data = d
)
post <- extract.samples(model)
individual_heights = c(140, 160, 175)
for (i in 1:length(individual_heights)) {
assign(paste("mu_at_", individual_heights[i]), post$a + post$b*(individual_heights[i]- height_mean) )
}
individual_heights = c(140, 160, 175)
for (i in 1:length(individual_heights)) {
assign(paste("mu_at_", individual_heights[i], sep = ""), post$a + post$b*(individual_heights[i]- height_mean) )
}
rm(list = all)
## 1 Construct a linear regression of weight as predicted by height, using the
# adults (age 18 or greater) from the Howell1 dataset. The heights listed below
# were recorded in the !Kung census, but weights were not recorded for these
# individuals. Provide predicted weights and 89% compatibility intervals for
# each of these individuals. That is, fill in the table below, using model-based
# predictions.
# Individual  height    expected weight     89% interval
#   1           140
#   2           160
#   3           175
library(rethinking)
data("Howell1")
d = Howell1[Howell1$age>=18, ]
height_mean = mean(d$height)
model <- quap(
alist(
weight ~dnorm(mu, sigma),
mu <- a + b*(height-height_mean),
a ~ dnorm(50, 80),
b ~ dlnorm(0, 1),
sigma ~ dunif(0, 30)
), data = d
)
post <- extract.samples(model)
individual_heights = c(140, 160, 175)
for (i in 1:length(individual_heights)) {
assign(paste("mu_at_", individual_heights[i], sep = ""), post$a + post$b*(individual_heights[i]- height_mean) )
}
for (i in 1:length(individual_heights)) {
assign(paste("mu_at_", individual_heights[i], sep = ""), post$a + post$b*(individual_heights[i]- height_mean) )
assign(paste("PI_for_", individual_heights[i], sep = ""), PI(paste("mu_at_", individual_heights[i],sep = "")))
}
